@page "/system/zasoby/view/{BookId:int}/create"
@page "/system/zasoby/view/{BookId:int}/edit/{CopyId:int}"
@layout ManagementLayout
@inject ICopyRepository CopyRepository
@inject IBookRepository BookRepository
@inject IJSRuntime JS
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<PageTitle>
    @(CopyId == null || CopyId == 0
        ? $"Dodaj"
        : $"Edytuj") egzemplarz
</PageTitle>

@if (IsLoading)
{
    <div class="text-center m-5">
        <img src="/images/loading-book.gif" alt="Ładowanie" />
        <p>Ładowanie...</p>
    </div>
}
else
{
    <div class="card-header bg-theme bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="py-2">
                    @(CopyId == null || CopyId == 0
                        ? $"Dodaj"
                        : $"Edytuj") egzemplarz książki „{book?.Title}”
                </h2>
            </div>
        </div>
    </div>

    <div class="card-body p-4">
        <div class="row pb-3">
            <div class="col-12 text-end">
                <div class="col-12 text-start">
                    <button @onclick="GoBack" class="btn btn-primary">
                        <i class="bi bi-arrow-bar-left"></i> Powrót
                    </button>
                </div>
            </div>
        </div>

        <div class="form-custom card shadow mb-4 p-4 mx-auto">
            <div class="mb-4 px-2">
                <EditForm Model="copy" FormName="UpsertCopyForm" OnValidSubmit="UpsertCopyFormSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <!--Tytuł-->
                    <div class="row mb-3">
                        <label class="col-sm-2 col-form-label text-end">Tytuł książki</label>
                        <div class="col-sm-10">
                            <p>@book.Title</p>
                        </div>
                    </div>

                    <!--Autor-->
                    <div class="row mb-3">
                        <label class="col-sm-2 col-form-label text-end">Autor</label>
                        <div class="col-sm-10">
                            <p>@book.BookAuthor</p>
                        </div>
                    </div>

                    <!--Wydawca-->
                    <div class="row mb-3">
                        <label class="col-sm-2 col-form-label text-end">Wydawca</label>
                        <div class="col-sm-10">
                            <p>@book.BookPublisher</p>
                        </div>
                    </div>

                    <!--Rok wydania-->
                    <div class="row mb-3">
                        <label class="col-sm-2 col-form-label text-end">Rok wydania</label>
                        <div class="col-sm-10">
                            <p>@book.Year</p>
                        </div>
                    </div>

                    <!--ISBN-->
                    <div class="row mb-3">
                        <label class="col-sm-2 col-form-label text-end">Numer ISBN</label>
                        <div class="col-sm-10">
                            <p>@book.Isbn</p>
                        </div>
                    </div>

                    <!--Sygnatura-->
                    <div class="row mb-3">
                        <label for="copy-signature" class="col-sm-2 col-form-label text-end">Sygnatura</label>
                        <div class="col-sm-10">
                            <InputText id="copy-signature"
                                       @bind-Value="copy.Signature"
                                       class="form-control p2"
                                       placeholder="LP.FAN.RJ.HP.1-001"
                                       minlength="18"
                                       maxlength="18" />
                        </div>
                    </div>

                    <!--Numer inwentarzowy-->
                    <div class="row mb-3">
                        <label for="copy-inv" class="col-sm-2 col-form-label text-end">Numer inwentarzowy</label>
                        <div class="col-sm-10">
                            <InputNumber id="copy-inv"
                                         @bind-Value="copy.InventoryNum"
                                         class="form-control p2"
                                         placeholder="00001"
                                         minlength="5"
                                         maxlength="5" />
                        </div>
                    </div>

                    <!--Przyciski-->
                    <div class="row">
                        <div class="d-flex justify-content-between mt-3">
                            <button @onclick="GoBack" class="btn btn-lg btn-gray">
                                <i class="bi bi-x-circle"></i> Anuluj
                            </button>

                            <button class="btn btn-lg btn-primary" type="submit">
                                <i class="bi bi-check-circle"></i>
                                @(BookId == 0 ? "Utwórz egzemplarz" : "Zapisz zmiany")
                            </button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int BookId { get; set; }

    [Parameter]
    public int? CopyId { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }

    private bool IsLoading { get; set; } = true;

    private CopyUpsertDto copy = new();
    private BookGetDto? book;

    private bool _isRendered;
    private bool _pendingError;
    private string? _pendingErrorMessage;

    protected override async Task OnParametersSetAsync()
    {
        IsLoading = true;

        book = await BookRepository.GetBookByIdAsync(BookId);
        if (book is null)
        {
            _pendingError = true;
            _pendingErrorMessage = "Nie znaleziono książki.";
            NavigationManager.NavigateTo("/system/zasoby");
            return;
        }

        if (CopyId.HasValue)
        {
            var existingCopy = await CopyRepository.GetCopyByIdAsync(CopyId.Value);
            if (existingCopy is null)
            {
                _pendingError = true;
                _pendingErrorMessage = "Nie znaleziono egzemplarza.";
                NavigationManager.NavigateTo($"/system/zasoby/view/{BookId}");
                return;
            }

            copy = new CopyUpsertDto
                {
                    Signature = existingCopy.Signature,
                    InventoryNum = existingCopy.InventoryNum,
                    BookId = existingCopy.BookId
                };
        }
        else
        {
            copy = new CopyUpsertDto
                {
                    BookId = BookId
                };
        }

        IsLoading = false;
    }

     protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("applyUserPreferences");
        }
    }

    private async Task UpsertCopyFormSubmit()
    {
        if (!CopyId.HasValue)
        {
            var created = await CopyRepository.CreateCopyAsync(copy);
            if (created is not null)
            {
                await JS.ToastrSuccess("Za chwilę nastąpi przekierowanie do poprzedniej strony", "Egzemplarz dodany pomyślnie.");
                await Task.Delay(5000);
                GoBack();
            }
            else
            {
                await JS.ToastrError("Za chwilę nastąpi przekierowanie do poprzedniej strony", "Nie udało się dodać egzemplarza.");
                await Task.Delay(5000);
                GoBack();
            }
        }
        else
        {
            var updated = await CopyRepository.UpdateCopyAsync(CopyId.Value, copy);
            if (updated is not null)
            {
                await JS.ToastrSuccess("Za chwilę nastąpi przekierowanie do poprzedniej strony", "Zaktualizowano egzemplarz.");
            }
            else
            {
                await JS.ToastrError("Za chwilę nastąpi przekierowanie do poprzedniej strony", "Wystąpił błąd przy aktualizacji egzemplarza.");
            }
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo(ReturnUrl ?? $"/system/zasoby/view/{BookId}");
    }
}
