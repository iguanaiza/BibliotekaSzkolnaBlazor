@implements IDisposable

@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar">
    <div class="container-fluid">
        <a class="navbar-brand text-light text-wrap text-center" href="bookslist">
            Biblioteka Szkoły Podstawowej nr 123 w&nbsp;Testach
        </a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="bookslist">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Zasoby
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="userslist">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Użytkownicy
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="booksbin" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Kosz
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="\" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Katalog
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

