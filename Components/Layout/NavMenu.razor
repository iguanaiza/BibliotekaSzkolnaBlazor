@implements IDisposable

@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar">
    <div class="container-fluid">
        <a class="d-flex align-items-center theme-font-color" href="/" style="max-width: 320px; text-decoration:none">
            <img src="/images/school-logo.png" class="img-thumbnail p-2" style="max-width:64px" />
            <span class="text-wrap text-center p-2"> Biblioteka SP <br> nr&nbsp;123 <br> w&nbsp;Testach</span>
        </a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                <i class="bi bi-book me-2" aria-hidden="true"></i>
                <span>Katalog</span>
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link d-flex align-items-center" href="bookslist">
                <span class="bi bi-collection" aria-hidden="true"></span> Zasoby
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link d-flex align-items-center" href="userslist">
                <span class="bi bi-people" aria-hidden="true"></span> Czytelnicy
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link d-flex align-items-center" href="booksbin" Match="NavLinkMatch.All">
                <span class="bi bi-trash3" aria-hidden="true"></span> Kosz
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

