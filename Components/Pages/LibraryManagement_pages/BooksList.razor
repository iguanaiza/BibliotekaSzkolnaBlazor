@page "/bookslist"

@inject IBookRepository _bookRepository
@inject IJSRuntime _JS

@rendermode InteractiveServer

<Modal OnModalConfirmation="ConfirmDelete_Click"></Modal>

@if (IsLoading)
{
    <div class="position-absolute w-75  h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading-book.gif" alt="loading" />
        <p>Ładowanie...</p>
    </div>
}

else
{
    <div class="card shadow border-0 m-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Lista książek</h2>
                </div>
            </div>
        </div>

        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="/booklist/create" class="btn btn-lg btn-success" style="width:250px;">
                        <i class="bi bi-plus-square-fill"></i> Dodaj nową książkę
                    </a>
                </div>
            </div>

            @if (Books.Any())
            {
                int index = 1;
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-sm align-middle table-hover text-nowrap">
                        <thead>
                            <tr>
                                <th scope="col"></th>
                                <th scope="col">#</th>
                                <th scope="col">Tytuł</th>
                                <th scope="col">Autor</th>
                                <th scope="col">Wydawca</th>
                                <th scope="col">Kategoria</th>
                                <th scope="col">ISBN</th>
                                <th scope="col">Rok wydania</th>
                                <th scope="col">Liczba kopii</th>
                                <th scope="col">Katalog</th>
                                <th scope="col">Oznaczenia</th>
                                <th scope="col">Akcje</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var book in Books)
                            {
                                <tr>
                                    <td>
                                        <a href="/booklist/view/@book.Id" class="btn btn-outline-primary btn-sm">
                                            <i class="bi bi-info-square"></i>
                                        </a>
                                        
                                    </td>
                                    <td>@index</td>
                                    <td>@book.Title</td>
                                    <td>@book.BookAuthor</td>
                                    <td>@book.BookPublisher</td>
                                    <td>@book.BookCategory</td>
                                    <td>@book.Isbn</td>
                                    <td>@book.Year</td>
                                    <td>@book.CopyCount</td>
                                    <td>@(book.IsVisible ? "Tak" : "Nie")</td>
                                    <td><span class="badge text-bg-info"> @book.SpecialTag</span></td>
                                    <td>
                                        <a href="/booklist/edit/@book.Id?returnUrl=/bookslist" class="btn btn-primary btn-sm">
                                            <i class="bi bi-pencil-square"></i> Edytuj
                                        </a>
                                        <button class="btn btn-danger btn-sm" @onclick="()=>HandleDelete(book.Id)">
                                            <i class="bi bi-trash3"></i> Usuń
                                        </button>
                                    </td>
                                </tr>
                                index++;
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
}

@code {
    private bool IsLoading { get; set; } = true;
    private IEnumerable<BookGetDto> Books { get; set; } = new List<BookGetDto>();
    private int DeleteBookID { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        await LoadBooks();
        IsLoading = false;
    }

    private async Task LoadBooks()
    {
        Books = await _bookRepository.GetBooksAsync();
    }

    private void HandleDelete(int id)
    {
        DeleteBookID = id;
        _JS.InvokeVoidAsync("ShowConfirmationModal");
    }

    private async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsLoading = true;
        await _JS.InvokeVoidAsync("HideConfirmationModal");

        if (isConfirmed && DeleteBookID !=0)
        {
            var result = await _bookRepository.BinBookAsync(DeleteBookID);
            
            if (result == null)
            {
                await _JS.ToastrError("Nie udało się usunąć książki.");
            }
            else
            {
                await _JS.ToastrSuccess("Książka przeniesiona do kosza.");
            }

            await LoadBooks();
        }
        DeleteBookID = 0;
        IsLoading = false;
    }
}